1. СУБД - це програмна оболонка над сховищем (БД)

2. Взаємодія з СУБД відбувається за принципом клієнт-сервер

Реляційна модель - модель баз даних, за якого дані пов'язані відношеннями

Відношення - це таблиця
Домен - множина допустимих значень
Атрибут - стовбець таблиці
Кортеж - рядок таблиці


Сутність - це об'єкт реального світу, який описується даними


За допомогою мови SQL ми робимо запити до СУБД

Запит - це команда

Команди складаються з:
- командних слів (зарезервованих, ключових слів) 
- ідентифікаторів - рядок або спецсимвол, розділений пробілами
закінчується ;

ідентифікатор - це ім'я. 
Ідентифікатор може бути без кавичок (його автоматично toLowerCase)
Ідентифікатор в лапках (ТІЛЬКИ ПОДВІЙНИХ - ") може містити великі літери, але для звернення до такої таблиці ви будете вимушені всюди писати цей ідентифікатор в кавичках
Мають починатися з літери, можуть містити числа
Пишемо в snake_case

CREATE TABLE users - ідентифікатор users - це ім'я таблиці, яку ми створюємо цією командою


Строкові константи (рядки, текст) - це послідовність символів (текст) в ОДИНАРНИХ лапках (')
При необхідності "екранувати" апостроф - ставимо поряд дві одинарні лапки
'users table' -> 'user''s table'

Числові константи - це числа
34
5.6
4e-10


Спеціальні знаки
$ - або ідентифікатор або строкова константа
() - групування елементів або пріорітет. В деяких випадках - частина синтактису
[] - масиви
, - розділення елементів списка. Висяча кома не підтримується!!
; - завершення команди. Тільки в кінці і ніколи не посередині команди
: - слугує для приведення типів, зрізання масивів
* - може заміняти "всі" строки або значення (як глоббінг) - аргумент функцій
. - в числових константах - розділення цілої і дрібної частини, а також для доступу до вкладених ідентифікаторів

/* */ - багаторядковий комента
.--  однорядковий


SQL language
    Команди діляться на групи:
DDL - Data Definition language: CREATE, DROP, ALTER, TRUNCATE
(визначення або зміна структури)
DML - Data Manipulation language: INSERT, UPDATE, DELETE, CALL, EXPAND, LOCK
(маніпуляція значеннями - данними)
TCL - Transaction control language: COMMIT, SAVEPOINT, ROLLBACK, SET TRANSACTION, SET CONSTRAINT
DCL - Data control language: GRANT, REVOKE
DQL - Data Query language: SELECT



Проєктування Архітектури - продумування необхідних атрибутів (стовпців), обмежень для даних і майбутніх зв'язків даних


Юзери
    - ім'я
    - прізвище
    - вік
    - емейл
    - пароль
    - підписку


ТИПИ ДАНИХ

Символьні
Значення в одинарних лапках
char(5) - 5 символів 
    'hello',
    'abracadabra' -> 'abrac'
    'hi!' -> 'hi!  '
varchar(5) - змінна довжина (не більше 5)
    'hello' -> 'hello',
    'abracadabra' -> 'abrac',
     'hi!' -> 'hi!'
text - необмежена довжина до 1GB текста


Дата/час
timestamp - дата + час 
time - тільки час
date - тільки дата 
interval - часовий інтервал (проміжок) між датами

Введення часу або дати - в таких самих одинарних лапках, як рядки

Boolean
TRUE,
FALSE,
NULL - аналогічно js undefined


Числові типи даних
Цілі
smallint, int, bigint - цілі числа. За спроби заінсертити реальне число, відсіче дрібну частину

Числа з плаваючою точністю (з дрібною частиною) - дійсні числа
numeric(), decimal()

numeric(точність, масштаб)
точність - це загальна кількість символів в числі
масштаб - це кількість цифр після точки

Наприклад
    18.5 - точність 3, масштаб 1
    147.34 - точність 5, масштаб 2

numeric(20, 2)
456745674567898765.43



---------------


CONSTRAINT - це обмеження, яке накладається на всі значення в стовпці або сукупності стовпців 
Обмеження - це правило.
Визначається (вказується) на етапі створення таблиці (або групи таблиць)